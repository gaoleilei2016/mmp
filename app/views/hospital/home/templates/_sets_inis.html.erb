<style type="text/css">
</style>
<!-- 代码编辑 -->
<%= javascript_include_tag '/assets/plugins/ace/ace', "/assets/plugins/beautify/beautify-html" %>
<template>
	<div id="sets_inis_div">
		<div class="page-header">
			<i class="fa fa-cog fa-4x fa-fw"></i>
			<h3>初始设置<small>初始值设置</small></h3>
		</div>
		<el-form :model="ini" size="mini" :rules="rules" ref="ini" label-width="300px" style="width: 80%; margin: 0 auto;">
			<div class="page-header">
				<h4>打印处方单&#12288;<small>处方单相关设置</small></h4>
			</div>
			<el-form-item label="启用打印处方功能" prop="enable_print_pres">
			  <el-radio v-model="ini.enable_print_pres" :label="true">是</el-radio>
  			<el-radio v-model="ini.enable_print_pres" :label="false">否</el-radio>
		  </el-form-item>
			<el-form-item label="处方打印内容" prop="print_pres_html">
			  <el-tabs v-model="activeName1" type="card" class="ace-edit-wrapper">
			    <el-tab-pane label="页面" name="print_pres_html1">
			    	<div v-html="ini.print_pres_html" class="scroll-section" style="overflow: auto;"></div>
			    </el-tab-pane>
			    <el-tab-pane label="源码" name="print_pres_html2">
			    	<div id="code_wrapper1" contentEditable="true">
						</div>
			    </el-tab-pane>
			  </el-tabs>
		  </el-form-item>

		  <hr style="border-top: 1px solid #eeeeee;"/>
		  <el-form-item>
		    <el-button type="primary" @click="submitForm('ini')">保存</el-button>
		    <el-button @click="resetForm('ini')">重置</el-button>
		  </el-form-item>
		</el-form>
	</div>
</template>
<script type="text/javascript">
window.current_template_obj = {
	data:function(){
		return {
			activeName1: "print_pres_html1",
			ini: {
				enable_print_pres: false, // 启用打印处方功能
				print_pres_html: "", // 处方打印内容
			},
			rules: {},
		}
	},
	mounted: function () {
		this.$nextTick(function(){
			this.init();
		})
	},
	methods:{
		init: function () {
  		var _this = this;
		  // 处方单
      var editor1 = ace.edit("code_wrapper1"); 
			editor1.getSession().setMode("ace/mode/html");
			editor1.getSession().setTabSize(1); 
			editor1.getSession().setUseWrapMode(true);
			// 源码改变
			editor1.getSession().on("change", function() {
		  	var code = editor1.getValue();
		  	_this.ini.print_pres_html = code;
		  })

  			// 获取门诊医生站的设置数据
		  Vue.resource('/hospital/sets/inis/cur_org_ini.json').get().then( function (response) {
        // 根据初始值的设置，对页面做配置显示
        var res = response.data
        if(res.flag) {
        	_this.ini = res.data;
	        if(_this.ini.print_pres_html) {
	        	editor1.getSession().setValue(_this.ini.print_pres_html);
	        }
        }
      }, function  (response) {
      	_this.$message.error('获取初始设置报错，请联系管理员。');
      })

  	},
  	submitForm: function (formName) {
  		var _this = this;
  		_this.$refs[formName].validate( function (valid) {
  			console.log(_this.ini)
  			if(valid){
  				Vue.resource('/hospital/sets/inis/'+_this.ini.id).update({authenticity_token: $('[name="csrf-token"]').attr('content'), ini: _this.ini}).then( function (response) {
  					var res = response.data;
  					_this.ini = res.data;
  					_this.$message({
		          message: '保存成功。',
		          type: 'success'
		        });
  				},function (response) {
  					_this.$message.error('保存初始设置报错，请联系管理员。');
  				})
  			}else {
  				_this.$message.error('必填字段不能为空。');
          return false;
        }
      });
  	},
  	resetForm: function (formName) {
      this.$refs[formName].resetFields();
    },
	},
}
</script>
