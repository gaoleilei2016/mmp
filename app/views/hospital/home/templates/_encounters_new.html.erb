<style type="text/css">
</style>
<template>
	<!-- 新建接诊页面 -->
	<div id="encounters_new_div">
		<!-- 患者基本信息部分 -->
		<%= render "hospital/home/render/encounters_info" %>
		<!-- 主业务区域 -->
		<el-tabs v-model="activeTab" type="card" @tab-click="handleTabClick">
      <el-tab-pane label="历史记录" name="histories">历史记录</el-tab-pane>
      <el-tab-pane label="药品" name="orders">
      	
      </el-tab-pane>
      <el-tab-pane label="处方列表" name="prescriptions">处方列表</el-tab-pane>
    </el-tabs>
	</div>
</template>
<script type="text/javascript">
window.current_template_obj = {
	data: function(){
		return {
			locations: [], // 选择药房
			activeCollapse: "patientinfo1",
			activeTab: "orders",
			encounter: {
				name: "",  // 姓名
	      gender: {code: "", display: ""},  // 性别
	      age: "",  // 年龄
	      birth_date: "",  // 出生日期
	      iden: "",  // 身份证号码
	      phone: "",  // 电话
	      address: "",  // 住址
	      occupation: {code: "", display: ""},  // 职业
	      contact_name: "",  // 联系人
	      nation: {code: "", display: ""},  // 民族
	      marriage: {code: "", display: ""},  // 婚姻
	      unit_name: "",  // 工作单位（学校）
	      diagnoses: [{ code: "", display: ""}],  // 诊断
	      allergens: [],  // 过敏
	      blood: {code: "", display: ""},  // 血型
	      height: "",  // 身高cm
	      weight: "",  // 体重kg
	      location: {id: "", display: ""}, // 取药点
			}, // 
			encountersResource: Vue.resource('/hospital/encounters{/id}.json'),
			rules: {
				name: [
		      { required: true, message: '姓名不能为空'},
		    ],
				gender: [
		      { required: true, message: '性别不能为空'},
		    ],
		    age: [
		      { required: true, message: '年龄不能为空'},
		      { type: 'number', message: '年龄必须为数字值'}
		    ],
		    birth_date: [
		    	{ required: false, message: '出生日期不能为空'},
		    ],
		    phone: [
		    	{ pattern: /^1[34578]\d{9}$/, message: '电话号码格式不正确'}
		    ],
		    iden: [
		    	{ pattern: /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/, message: '身份证号码格式不正确'}
		    ],
		    contact_name: [
		    	{ required: false, message: '监护人不能为空'},
		    ],
			},
			showAllPatInfo: false, // 显示所有的可填数据
			focusDiagnosisInputIndex: 0, // 聚焦第几个诊断
			inputTagValue: "", // 过敏源录入
			inputTagVisible: false, // 是否显示过敏源录入框
		}
	},
	watch: {
	},
	computed: {
    bmi: function () {
    	var weight = parseFloat(this.encounter.weight||0),
    	    height = parseFloat(this.encounter.height||0)/100,
    	    bmi = height>0 ? parseFloat(weight/Math.pow(height,2)).toFixed(2) : 0;
      return bmi
    }
	},
	mounted: function () {
		this.$nextTick(function(){
			this.init();
		})
	},
	methods: {
		init: function() {
			var _this = this;
			console.log(this.$parent.common_data_genders)
			console.log(this.genders)

			Vue.resource('/hospital/encounters/new.json').get().then( function (response) {
        var res = response.data;
        if(res.flag) {
        	// 获取科室、医生姓名等
        }
      }, function  (response) {
        _this.$message.error('获取就诊基础数据失败，请联系管理员。');
      })
		},
		submitForm: function (formName) {
      this.$refs[formName].validate( function (valid) {
        if (valid) {
          alert('submit!');
        } else {
          console.log('error submit!!');
          return false;
        }
      });
    },
    resetForm: function (formName) {
      this.$refs[formName].resetFields();
    },
    // 判断年龄，如果小于14要求出生日期、监护人必填
    judgeAge: function (val) {
    	var _this = this, flag = false;
    	if(val < 14) {
	    	_this.$message({
	        message: "请输入具体的出生日期、监护人姓名。",
	        type: 'warning'
	      });
	      flag = true;
    	}
    	_this.rules["birth_date"][0]["required"] = flag;
    	_this.rules["contact_name"][0]["required"] = flag;
    },
		// 侧边搜索患者栏目
		toggleSidebar: function () {
			console.log("搜索患者侧边栏")
		},
		// 判断性别，根据性别显示图标
  	judgeGender: function (gender) {
  		if(!gender){ gender = ""; }
      var html = '';
  		if(gender.indexOf('男')>-1){
  			html = '<i class="text-primary fa fa-lg fa-fw fa-male"></i>';
  		}else if(gender.indexOf('女')>-1){
  			html = '<i class="text-danger fa fa-lg fa-fw fa-female"></i>';
  		}else{
  			html = '<i class="text-muted fa fa-lg fa-fw fa-male"></i>'
  		}
  		return html;
	  },
	  /* 诊断操作 ----start */ 
	  // 查询诊断
  	querySearchDiagnoseAsync: function(queryString, cb) {
			var _this = this;
			Vue.resource('http://192.168.2.18:3000/voc/search_table_names.json').get({oid: _this.diagnoseOid, target: "CodeSystem", search: queryString}).then(function(response) {
		    if (response.data) {
					cb(response.data);
				}
		  },function() {

		  })
		},
		// 选择诊断
		handleSelectDiagnosis: function(item) {
			var _this = this;
			var index = _this.focusDiagnosisInputIndex
	    _this.encounter.diagnoses[index].code = item.id;
	    _this.encounter.diagnoses[index].display = item.name;
		},
		// 增加诊断
  	addDiagnosis: function () {
  		var _this = this, isAdd = true;
  		$.each(_this.encounter.diagnoses||[], function(k, v){
  			if(!v.display){ 
  				isAdd = false;
  				_this.$message({
	          message: '诊断不能为空。',
	          type: 'warning'
	        });
  				$('input[name="diagnose'+k+'"]').focus();
  			}
  		})
  		if(isAdd){
  			_this.encounter.diagnoses.push({ code: "", display: ""});
  			_this.$nextTick(function(){
    			var index = _this.encounter.diagnoses.length-1;
    			setTimeout(function(){$('input[name="diagnose'+index+'"]').focus();}, 0);
  			})
  		}
  	},
  	/* 诊断操作  ----end */
  	/* 过敏信息操作  --- start */ 
  	handleCloseTag: function (tag) {
      this.encounter.allergens.splice(this.encounter.allergens.indexOf(tag), 1);
    },
    showTagInput: function () {
      this.inputTagVisible = true;
      this.$nextTick(function() {
        this.$refs.saveTagInput.$refs.input.focus();
      });
    },
    handleTagInputConfirm: function () {
      var inputTagValue = this.inputTagValue;
      if (inputTagValue) {
        this.encounter.allergens.push(inputTagValue);
      }
      this.inputTagVisible = false;
      this.inputTagValue = '';
    },
    /* 过敏信息操作  --- end */ 

    // 切换主业务区域tab
    handleTabClick: function (tab, event) {

    }
	}
}
</script>
